plugins {
	id 'java'
	id 'org.springframework.boot' version '3.4.5'
	id 'io.spring.dependency-management' version '1.1.7'
	id 'org.graalvm.buildtools.native' version '0.10.6'
    id 'com.vaadin' version '24.6.6'
    id 'org.cyclonedx.bom' version '2.3.0'
}

group = 'com.thomasvitale'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(24)
    }
}

repositories {
	mavenCentral()
}

ext {
    set('arconiaVersion', "0.8.0")
	set('springAiVersion', "1.0.0-M6")
    set('vaadinVersion', "24.6.6")
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'

    implementation 'net.ttddyy.observation:datasource-micrometer-spring-boot:1.1.0'

    implementation 'org.flywaydb:flyway-core'
    implementation 'org.flywaydb:flyway-database-postgresql'

    runtimeOnly 'org.postgresql:postgresql'

    implementation 'org.springframework.ai:spring-ai-mistral-ai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-openai-spring-boot-starter'
    implementation 'org.springframework.ai:spring-ai-pgvector-store-spring-boot-starter'

    implementation 'com.vaadin:vaadin-spring-boot-starter'
    implementation 'org.parttio:line-awesome:2.1.0'

    implementation 'io.arconia:arconia-opentelemetry-spring-boot-starter'

    testAndDevelopmentOnly 'io.arconia:arconia-dev-tools'
    testAndDevelopmentOnly 'io.arconia:arconia-dev-services-opentelemetry-lgtm'
    testAndDevelopmentOnly 'io.arconia:arconia-dev-services-postgresql'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'
}

dependencyManagement {
    imports {
        mavenBom "com.vaadin:vaadin-bom:${vaadinVersion}"
        mavenBom "io.arconia:arconia-bom:${arconiaVersion}"
        mavenBom "org.springframework.ai:spring-ai-bom:${springAiVersion}"
    }
}

tasks.named('test') {
	useJUnitPlatform()
}

tasks.named('bootBuildImage') {
    builder = "paketobuildpacks/builder-noble-java-tiny"
}
